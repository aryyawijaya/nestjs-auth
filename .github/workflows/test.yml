# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Run unit tests

on:
  push:
    branches: ['main', 'dev']
  pull_request:
    branches: ['main', 'dev']

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:16.0-alpine3.18
        # Provide the password for postgres
        env:
          POSTGRES_USER: aryya
          POSTGRES_PASSWORD: 123
          POSTGRES_DB: auth
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.19.0'

      - name: Run migrations
        run: |
            npx prisma generate
            npx prisma migrate deploy

      - name: Test
        run: npm run test
